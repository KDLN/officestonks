FROM golang:1.20 as builder

# Set the working directory inside the container
WORKDIR /go/src/app

# Copy go module files first for better caching
COPY go.mod go.sum ./

# Debugging: echo go module configuration
RUN go env

# Install all dependencies including direct ones to be sure
RUN go mod download

# Copy the source code
COPY . .

# Build the application with verbose output
RUN go build -v -o /go/bin/app ./cmd/api/main.go

# Create a minimal image for runtime
FROM debian:bullseye-slim

# Install necessary system tools and certificates
RUN apt-get update && apt-get install -y ca-certificates default-mysql-client && rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

# Copy the binary from the builder stage
COPY --from=builder /go/bin/app /app/server

# Copy necessary files for running
COPY schema.sql /app/schema.sql
COPY start.sh /app/start.sh
COPY start-server.sh /app/start-server.sh
COPY init-db.sh /app/init-db.sh

# Make all scripts executable
RUN chmod +x /app/server /app/start.sh /app/start-server.sh /app/init-db.sh

# Expose the application port
EXPOSE 8080

# Run the application
CMD ["/app/server"]